// Вопросы

// 1
// Вопрос: Что содержит свойствой объекта
// Ответ: пару ключ:значение

// 2
// Вопрос: Напишите синтаксис "конструктор объекта" и "литерал объекта"?
// Ответ: let user = new Object(); // синтаксис "конструктор объекта"
// let user = {};  // синтаксис "литерал объекта"

// 3
// Вопрос: Удалите свойство из объекта.
// Ответ:
// let user = {
// 	// объект
// 	name: 'John', // под ключом "name" хранится значение "John"
// 	age: 30, // под ключом "age" хранится значение 30
// };
// delete user.age;

// 4
// Вопрос: Как сделать составное имя свойства
// Ответ:
// let user = {
//     name: "John",
//     age: 30,
//     "likes birds": true  // имя свойства из нескольких слов должно быть в кавычках
//   };

// 5
// Вопрос: Может ли объект объявленный как константа быть изменен?
// Ответ: да,
// дело в том, что объявление const защищает от изменений только саму переменную user, а не её содержимое.

// 6
// Вопрос: Как получить доступ к ключу объявленных через несколько слов
// Ответ: user["likes birds"] = true;

// 7
// Вопрос: Как создать вычисляемое свойство?
// Ответ:
// let fruit = prompt("Какой фрукт купить?", "apple");

// let bag = {
//   [fruit]: 5, // имя свойства будет взято из переменной fruit
// };

// alert( bag.apple ); // 5, если fruit="apple"

// 8
// Вопрос: Пример свойства из переменной
// Ответ: пару ключ:значение
// function makeUser(name, age) {
//     return {
//       name, // то же самое, что и name: name
//       age   // то же самое, что и age: age
//       // ...
//     };
//   }

// 9
// Вопрос: Как проверить существование свойства?
// Ответ:
// let user = { name: "John", age: 30 };

// alert( "age" in user ); // true, user.age существует
// alert( "blabla" in user ); // false, user.blabla не существует

// 10
// Вопрос: Как перебрать все свойства объекта?
// Ответ:
// let user = {
//     name: "John",
//     age: 30,
//     isAdmin: true
//   };

//   for (let key in user) {
// ключи
//     alert( key );  // name, age, isAdmin
// значения ключей
//     alert( user[key] ); // John, 30, true
//   }

// 11
// Вопрос: Упорядоченны ли свойства в объекте?
// Ответ: свойства упорядочены особым образом: свойства с целочисленными ключами сортируются по возрастанию, остальные располагаются в порядке создания. Разберёмся подробнее.
// let codes = {
//     "49": "Германия",
//     "41": "Швейцария",
//     "44": "Великобритания",
//     // ..,
//     "1": "США"
//   };

//   for (let code in codes) {
//     alert(code); // 1, 41, 44, 49
//   }

// Задачи
// Вопрос: Напишите функцию isEmpty(obj), которая возвращает true, если у объекта нет свойств, иначе false.

// let schedule = {};

// alert( isEmpty(schedule) ); // true

// schedule["8:30"] = "get up";

// alert( isEmpty(schedule) ); // false

// function isEmpty(obj) {
//     for (let key in obj) {
//       // если тело цикла начнет выполняться - значит в объекте есть свойства
//       return false;
//     }
//     return true;
//   }

// Вопрос:Напишите код для суммирования всех зарплат и сохраните результат в переменной sum. Должно получиться 390.

// let salaries = {
//     John: 100,
//     Ann: 160,
//     Pete: 130
//   };

//   let sum = 0;
//   for (let key in salaries) {
//     sum += salaries[key];
//   }

//   alert(sum); // 390

// Вопрос: Создайте функцию multiplyNumeric(obj), которая умножает все числовые свойства объекта obj на 2.
// до вызова функции
// let menu = {
//     width: 200,
//     height: 300,
//     title: "My menu"
//   };

//   multiplyNumeric(menu);
//   function multiplyNumeric(obj) {
//     for (let key in obj) {
//       if (typeof obj[key] == 'number') {
//         obj[key] *= 2;
//       }
//     }
//   }
//   // после вызова функции
//   menu = {
//     width: 400,
//     height: 600,
//     title: "My menu"
//   };
